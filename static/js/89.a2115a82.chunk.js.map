{"version":3,"file":"static/js/89.a2115a82.chunk.js","mappings":"oPACA,EAAuB,2B,SCuCvB,EApCoB,WAClB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,kHAEMC,EAAAA,EAAAA,IAAWJ,GAFjB,gBAETK,EAFS,EAETA,KAEFC,EAAUD,EAAKE,QAAQC,KAAI,SAAAC,GAC/B,MAAO,CAAEC,KAAMD,EAAKE,OAAQC,QAASH,EAAKG,QAC3C,IACDb,EAAWO,GAPM,gDASjBO,QAAQC,IAAR,MATiB,yDAAH,qDAYlBX,GACD,GAAE,CAACH,IACJ,IAAMe,EAAWjB,EAAQU,KAAI,YAAwB,IAArBE,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACpC,OACE,iCACE,qCAAaF,MACb,wBAAgBE,GAAPF,KAGd,IACD,OACE,eAAIM,UAAWC,EAAf,SACuB,IAApBF,EAASG,QACR,6DAEAH,GAIP,C,2JCpCKI,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,gCAIfC,OAAQ,CAAEC,QAHI,sCAKHC,EAAc,WAGzB,OAFaL,EAASM,IAAI,mBAG3B,EACYC,EAAe,SAAA1B,GAE1B,OADamB,EAASM,IAAT,gBAAsBzB,GAEpC,EACY2B,EAAW,SAAA3B,GAEtB,OADamB,EAASM,IAAT,gBAAsBzB,EAAtB,YAEd,EACYI,EAAa,SAAAJ,GAExB,OADamB,EAASM,IAAT,gBAAsBzB,EAAtB,YAEd,EACY4B,EAAc,SAAAC,GAOzB,OANaV,EAASM,IAAT,gBAA8B,CACzCH,OAAQ,CACNQ,MAAOD,IAKZ,C","sources":["webpack://goit-react-hw-05-movies/./src/components/PageReviews/PagesReviews.module.css?1850","components/PageReviews/PageReviews.jsx","services/getFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"PagesReviews_list__MvtVo\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getFetch';\nimport css from './PagesReviews.module.css';\nconst PageReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await getReviews(id);\n\n        const getInfo = data.results.map(item => {\n          return { name: item.author, content: item.content };\n        });\n        setReviews(getInfo);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n  const elements = reviews.map(({ name, content }) => {\n    return (\n      <>\n        <h3>Author: {name}</h3>\n        <li key={name}>{content}</li>\n      </>\n    );\n  });\n  return (\n    <ul className={css.list}>\n      {elements.length === 0 ? (\n        <p>Sorry, this movie has no reviews </p>\n      ) : (\n        elements\n      )}\n    </ul>\n  );\n};\nexport default PageReviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9b020c0fe253e2a5d274f7265e2b0541';\nconst getMovie = axios.create({\n  baseURL: BASE_URL,\n  params: { api_key: API_KEY },\n});\nexport const searchMovie = () => {\n  const data = getMovie.get('trending/all/day');\n\n  return data;\n};\nexport const detailsMovie = id => {\n  const data = getMovie.get(`movie/${id}`);\n  return data;\n};\nexport const getActor = id => {\n  const data = getMovie.get(`movie/${id}/credits`);\n  return data;\n};\nexport const getReviews = id => {\n  const data = getMovie.get(`movie/${id}/reviews`);\n  return data;\n};\nexport const searchField = search => {\n  const data = getMovie.get(`/search/movie`, {\n    params: {\n      query: search,\n    },\n  });\n\n  return data;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","getReviews","data","getInfo","results","map","item","name","author","content","console","log","elements","className","css","length","getMovie","axios","baseURL","params","api_key","searchMovie","get","detailsMovie","getActor","searchField","search","query"],"sourceRoot":""}